# docker-compose-airflow.yml
networks:
  project-network:
    external: true
    name: goit-de-fp_project-network

services:
  postgres:
    image: postgres:13
    container_name: postgres-airflow
    restart: always
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    networks:
      - project-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      timeout: 5s
      retries: 5

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    image: goit-airflow-spark:latest
    container_name: airflow-webserver
    restart: always
    env_file:
      - ./.env
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./scripts:/opt/airflow/scripts
      - ./config:/opt/airflow/config
      - ./data:/opt/airflow/data
    networks:
      - project-network
    ports:
      - "8082:8080"
    command: >
      bash -c "
        airflow db upgrade &&
        airflow users create --role Admin --username admin --email admin@example.com --firstname Admin --lastname User --password admin || true &&
        airflow variables set 'de_project_home' '/opt/airflow' || true &&
        airflow webserver
      "
    depends_on:
      postgres:
        condition: service_healthy

  airflow-scheduler:
    image: goit-airflow-spark:latest
    container_name: airflow-scheduler
    restart: always
    env_file:
      - ./.env
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./scripts:/opt/airflow/scripts
      - ./config:/opt/airflow/config
      - ./data:/opt/airflow/data
    networks:
      - project-network
    command: bash -c "sleep 10; airflow scheduler"
    depends_on:
      postgres:
        condition: service_healthy
      airflow-webserver:
        condition: service_started
